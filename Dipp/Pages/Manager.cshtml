@page
@model Dipp.Pages.ManagerModel
@{
    ViewData["Title"] = "Управление заявками";
}

<div class="container-fluid py-4">
    <!-- Заголовок и статистика -->
    <div class="mb-4">
        <div class="d-flex flex-wrap justify-content-between align-items-center mb-3">
            <div>
                <h2 class="fw-bold text-primary mb-1">
                    <i class="bi bi-calendar-check me-2"></i>Управление заявками
                </h2>
                <p class="text-muted">Заявки, ожидающие добавления в расписание</p>
            </div>
            <div class="d-flex gap-2">
                <div class="input-group">
                    <span class="input-group-text bg-white border-end-0">
                        <i class="bi bi-search text-muted"></i>
                    </span>
                    <input type="text" class="form-control border-start-0" id="searchRequests"
                           placeholder="Поиск заявок..." aria-label="Поиск заявок">
                </div>
                <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#filterModal">
                    <i class="bi bi-funnel me-1"></i>Фильтры
                </button>
            </div>
        </div>

        <!-- Карточки статистики -->
        <div class="row g-3 mb-4">
            <div class="col-md-3">
                <div class="card border-0 shadow-sm bg-primary bg-opacity-10">
                    <div class="card-body d-flex align-items-center">
                        <div class="rounded-circle bg-primary text-white p-3 me-3">
                            <i class="bi bi-clipboard-data fs-4"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0">Всего заявок</h6>
                            <h3 class="mb-0">@Model.Requests.Count()</h3>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card border-0 shadow-sm bg-success bg-opacity-10">
                    <div class="card-body d-flex align-items-center">
                        <div class="rounded-circle bg-success text-white p-3 me-3">
                            <i class="bi bi-check-circle fs-4"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0">Подтверждено</h6>
                            <h3 class="mb-0">@Model.Requests.Count(r => r.Status == "Подтверждено")</h3>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card border-0 shadow-sm bg-warning bg-opacity-10">
                    <div class="card-body d-flex align-items-center">
                        <div class="rounded-circle bg-warning text-white p-3 me-3">
                            <i class="bi bi-hourglass-split fs-4"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0">Ожидает</h6>
                            <h3 class="mb-0">@Model.Requests.Count(r => r.Status == "Ожидает")</h3>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card border-0 shadow-sm bg-info bg-opacity-10">
                    <div class="card-body d-flex align-items-center">
                        <div class="rounded-circle bg-info text-white p-3 me-3">
                            <i class="bi bi-currency-exchange fs-4"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0">Общая стоимость</h6>
                            <h3 class="mb-0">@Model.Requests.Sum(r => r.Cost).ToString() ₽</h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Основная таблица заявок -->
    <div class="card border-0 shadow-sm">
        <div class="card-header bg-white py-3">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="mb-0">
                    <i class="bi bi-list-check me-2"></i>Список заявок
                </h5>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="selectAll">
                    <label class="form-check-label" for="selectAll">
                        Выбрать все
                    </label>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            <form method="post">
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0">
                        <thead class="table-light">
                            <tr>
                                <th scope="col" class="ps-4" width="50">
                                    <i class="bi bi-check-square text-muted"></i>
                                </th>
                                <th scope="col">Маршрут</th>
                                <th scope="col">Груз</th>
                                <th scope="col">Стоимость</th>
                                <th scope="col">Статус</th>
                                <th scope="col" class="text-end pe-4">Действия</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model.Requests)
                            {
                                <tr>
                                    <td class="ps-4">
                                        <div class="form-check">
                                            <input class="form-check-input request-checkbox" type="checkbox"
                                                   name="selectedIds" value="@order.RequestId" id="request-@order.RequestId">
                                            <label class="form-check-label" for="request-@order.RequestId"></label>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="route-icon me-2">
                                                <i class="bi bi-geo-alt text-primary"></i>
                                            </div>
                                            <div>
                                                <span class="fw-medium">@order.Route.RouteName</span>
                                                <div class="text-muted small">ID: @order.RequestId</div>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="cargo-icon me-2">
                                                <i class="bi bi-box-seam text-secondary"></i>
                                            </div>
                                            <span>@order.Cargo.CargoName</span>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="fw-medium">@order.Cost.ToString() ₽</span>
                                    </td>
                                    <td>
                                        @{
                                            string badgeClass = order.Status switch
                                            {
                                                "Подтверждено" => "bg-success",
                                                "Ожидает" => "bg-warning",
                                                "В обработке" => "bg-info",
                                                "Отклонено" => "bg-danger",
                                                _ => "bg-secondary"
                                            };
                                            string statusIcon = order.Status switch
                                            {
                                                "Подтверждено" => "bi-check-circle-fill",
                                                "Ожидает" => "bi-hourglass-split",
                                                "В обработке" => "bi-arrow-repeat",
                                                "Отклонено" => "bi-x-circle-fill",
                                                _ => "bi-question-circle"
                                            };
                                        }
                                        <span class="badge @badgeClass">
                                            <i class="bi @statusIcon me-1"></i>
                                            @order.Status
                                        </span>
                                    </td>
                                    <td class="text-end pe-4">
                                        <div class="btn-group">
                                            <a href="#" class="btn btn-sm btn-outline-primary" data-bs-toggle="tooltip"
                                               data-bs-title="Просмотр деталей">
                                                <i class="bi bi-eye"></i>
                                            </a>
                                            <button type="submit" formmethod="post" formaction="?handler=Confirm&id=@order.RequestId"
                                                    class="btn btn-sm btn-outline-success" data-bs-toggle="tooltip"
                                                    data-bs-title="Подтвердить заявку">
                                                <i class="bi bi-check-lg"></i>
                                            </button>
                                            <a href="#" class="btn btn-sm btn-outline-danger" data-bs-toggle="tooltip"
                                               data-bs-title="Отклонить заявку">
                                                <i class="bi bi-x-lg"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Нижняя панель с кнопками действий -->
                <div class="card-footer bg-white py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="text-muted small">
                            Выбрано: <span id="selectedCount">0</span> из <span class="fw-bold">@Model.Requests.Count()</span> заявок
                        </div>
                        <div class="d-flex gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-calendar-plus me-2"></i>Добавить выбранные в расписание
                            </button>
                            <button type="button" class="btn btn-outline-success">
                                <i class="bi bi-check-all me-2"></i>Подтвердить выбранные
                            </button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Модальное окно фильтров -->
<div class="modal fade" id="filterModal" tabindex="-1" aria-labelledby="filterModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="filterModalLabel">Фильтры</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="statusFilter" class="form-label">Статус</label>
                    <select class="form-select" id="statusFilter">
                        <option value="">Все статусы</option>
                        <option value="Ожидает">Ожидает</option>
                        <option value="Подтверждено">Подтверждено</option>
                        <option value="В обработке">В обработке</option>
                        <option value="Отклонено">Отклонено</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="routeFilter" class="form-label">Маршрут</label>
                    <select class="form-select" id="routeFilter">
                        <option value="">Все маршруты</option>
                        @foreach (var route in Model.Requests.Select(r => r.Route.RouteName).Distinct())
                        {
                            <option value="@route">@route</option>
                        }
                    </select>
                </div>
                <div class="mb-3">
                    <label for="costRangeMin" class="form-label">Диапазон стоимости</label>
                    <div class="d-flex gap-2 align-items-center">
                        <input type="number" class="form-control" id="costRangeMin" placeholder="От">
                        <span>—</span>
                        <input type="number" class="form-control" id="costRangeMax" placeholder="До">
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                <button type="button" class="btn btn-primary">Применить фильтры</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Добавляем Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">

    <script>
        // Инициализация тултипов
        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));

        // Функция выбора всех чекбоксов
        document.getElementById('selectAll')?.addEventListener('change', function() {
            const checkboxes = document.querySelectorAll('.request-checkbox');
            checkboxes.forEach(checkbox => {
                checkbox.checked = this.checked;
            });
            updateSelectedCount();
        });

        // Обновление счетчика выбранных заявок
        const checkboxes = document.querySelectorAll('.request-checkbox');
        checkboxes.forEach(checkbox => {
            checkbox.addEventListener('change', updateSelectedCount);
        });

        function updateSelectedCount() {
            const selectedCount = document.querySelectorAll('.request-checkbox:checked').length;
            document.getElementById('selectedCount').textContent = selectedCount;
        }

        // Поиск по таблице
        document.getElementById('searchRequests')?.addEventListener('keyup', function() {
            const searchText = this.value.toLowerCase();
            const tableRows = document.querySelectorAll('tbody tr');

            tableRows.forEach(row => {
                const text = row.textContent.toLowerCase();
                row.style.display = text.includes(searchText) ? '' : 'none';
            });
        });
    </script>
}