@page
@model Dipp.Pages.LogistStatisticsModel

@{
    ViewData["Title"] = "Статистика логиста";
}

<!-- Используем только CDN для иконок Bootstrap -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">

<div class="bg-primary bg-gradient text-white p-4 rounded mb-4">
    <div class="d-flex justify-content-between align-items-center mb-2">
        <h2 class="mb-0">Статистика логиста</h2>
        <div class="dropdown">
            <button class="btn btn-light dropdown-toggle" type="button" id="periodDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-calendar3"></i> Период: Последние 30 дней
            </button>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="periodDropdown">
                <li><a class="dropdown-item active" href="#">Последние 30 дней</a></li>
                <li><a class="dropdown-item" href="#">Последние 7 дней</a></li>
                <li><a class="dropdown-item" href="#">Текущий месяц</a></li>
                <li><a class="dropdown-item" href="#">Предыдущий месяц</a></li>
                <li><hr class="dropdown-divider"></li>
                <li><a class="dropdown-item" href="#">Выбрать период...</a></li>
            </ul>
        </div>
    </div>
    <p class="mb-0">Аналитика по простоям, грузам и эффективности перевозок</p>
</div>

<div class="row mb-4">
    

    <div class="col-md-3 col-sm-6 mb-4 mb-md-0">
        <div class="card h-100 shadow-sm border-0 rounded-3">
            <div class="card-body">
                <div class="d-flex align-items-center mb-3">
                    <div class="bg-success bg-opacity-10 p-3 rounded-3 me-3">
                        <i class="bi bi-currency-dollar text-success fs-4"></i>
                    </div>
                    <div>
                        <div class="text-muted small">Стоимость простоев</div>
                        <div class="fs-3 fw-bold">@Model.TotalDowntimeCost.ToString("N0") ₽</div>
                    </div>
                </div>
                <div class="d-flex justify-content-between align-items-center">
                    <span class="text-muted small">За последние 30 дней</span>
                    <span class="badge bg-danger">+12.3%</span>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-3 col-sm-6 mb-4 mb-md-0">
        <div class="card h-100 shadow-sm border-0 rounded-3">
            <div class="card-body">
                <div class="d-flex align-items-center mb-3">
                    <div class="bg-warning bg-opacity-10 p-3 rounded-3 me-3">
                        <i class="bi bi-geo-alt text-warning fs-4"></i>
                    </div>
                    <div>
                        <div class="text-muted small">Станции с простоями</div>
                        <div class="fs-3 fw-bold">@Model.AverageDowntimeByStation.Count</div>
                    </div>
                </div>
                <div class="d-flex justify-content-between align-items-center">
                    <span class="text-muted small">Всего станций</span>
                    <span class="badge bg-success">-2.1%</span>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-3 col-sm-6 mb-4 mb-md-0">
        <div class="card h-100 shadow-sm border-0 rounded-3">
            <div class="card-body">
                <div class="d-flex align-items-center mb-3">
                    <div class="bg-info bg-opacity-10 p-3 rounded-3 me-3">
                        <i class="bi bi-box-seam text-info fs-4"></i>
                    </div>
                    <div>
                        <div class="text-muted small">Типы грузов</div>
                        <div class="fs-3 fw-bold">@Model.Top5CargoTypesByRequests.Sum(c => c.RequestCount)</div>
                    </div>
                </div>
                <div class="d-flex justify-content-between align-items-center">
                    <span class="text-muted small">Всего заявок</span>
                    <span class="badge bg-success">+8.7%</span>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-6 mb-4">
        <div class="card shadow-sm border-0 rounded-3 h-100">
            <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                <span><i class="bi bi-clock-history me-2"></i> Среднее время простоя по станциям</span>
                <button class="btn btn-sm btn-light" data-bs-toggle="tooltip" title="Экспорт данных">
                    <i class="bi bi-download"></i>
                </button>
            </div>
            <div class="card-body p-0">
                <div class="p-3">
                    <div class="input-group">
                        <span class="input-group-text bg-light border-0"><i class="bi bi-search"></i></span>
                        <input type="text" class="form-control border-0 bg-light" placeholder="Поиск станции...">
                    </div>
                </div>
                <div>
                    @foreach (var entry in Model.AverageDowntimeByStation.Take(6))
                    {
                        <div class="px-3 py-3 border-bottom">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span class="fw-medium">@entry.Key</span>
                                <span class="badge bg-primary bg-opacity-10 text-primary px-3 py-2">
                                    <i class="bi bi-clock me-1"></i>
                                    @entry.Value.Hours ч @entry.Value.Minutes мин
                                </span>
                            </div>
                            @{
                                // Генерируем случайное значение для прогресс-бара (в реальном приложении здесь будет реальное значение)
                                var random = new Random();
                                var progressValue = random.Next(20, 95);
                                var progressClass = progressValue > 70 ? "bg-danger" : (progressValue > 40 ? "bg-warning" : "bg-success");
                            }
                            <div class="progress" style="height: 8px;">
                                <div class="progress-bar @progressClass" role="progressbar" style="width: @progressValue%"
                                     aria-valuenow="@progressValue" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                        </div>
                    }
                </div>
                @if (Model.AverageDowntimeByStation.Count > 6)
                {
                    <div class="text-center p-3">
                        <button class="btn btn-sm btn-outline-primary">Показать все станции (@Model.AverageDowntimeByStation.Count)</button>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="col-lg-6 mb-4">
        <div class="card shadow-sm border-0 rounded-3 h-100">
            <div class="card-header bg-warning text-dark d-flex justify-content-between align-items-center">
                <span><i class="bi bi-exclamation-triangle me-2"></i> ТОП-5 станций с наибольшим простоем</span>
                <button class="btn btn-sm btn-dark" data-bs-toggle="tooltip" title="Экспорт данных">
                    <i class="bi bi-download"></i>
                </button>
            </div>
            <div class="card-body">
                @foreach (var (station, index) in Model.Top5StationsByDowntime.Select((s, i) => (s, i)))
                {
                    <div class="d-flex align-items-center mb-4">
                        <div class="me-3">
                            <div class="d-flex align-items-center justify-content-center bg-warning bg-opacity-10 text-warning rounded-3"
                                 style="width: 2.5rem; height: 2.5rem; font-weight: 700;">
                                @(index + 1)
                            </div>
                        </div>
                        <div class="flex-grow-1">
                            <div class="d-flex justify-content-between align-items-center mb-1">
                                <span class="fw-medium">@station.StationName</span>
                                <span class="fw-bold">@station.TotalDowntime.Hours ч @station.TotalDowntime.Minutes мин</span>
                            </div>
                            @{
                                // Генерируем случайное значение для прогресс-бара (в реальном приложении здесь будет реальное значение)
                                var random = new Random();
                                var progressValue = 95 - (index * 15); // Убывающий прогресс для топ-5
                                var progressClass = progressValue > 70 ? "bg-danger" : (progressValue > 40 ? "bg-warning" : "bg-primary");
                            }
                            <div class="progress" style="height: 8px;">
                                <div class="progress-bar @progressClass" role="progressbar" style="width: @progressValue%"
                                     aria-valuenow="@progressValue" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                        </div>
                    </div>
                }
                <div class="alert alert-warning mt-3 mb-0">
                    <div class="d-flex">
                        <i class="bi bi-info-circle-fill me-2 fs-5"></i>
                        <div>
                            <strong>Внимание!</strong> Станции с наибольшим простоем требуют оптимизации логистических процессов.
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-6 mb-4">
        <div class="card shadow-sm border-0 rounded-3 h-100">
            <div class="card-header bg-success text-white d-flex justify-content-between align-items-center">
                <span><i class="bi bi-currency-dollar me-2"></i> Суммарная стоимость простоев</span>
                <div>
                    <button class="btn btn-sm btn-outline-light me-2" data-bs-toggle="tooltip" title="Обновить данные">
                        <i class="bi bi-arrow-clockwise"></i>
                    </button>
                    <button class="btn btn-sm btn-light" data-bs-toggle="tooltip" title="Подробный отчет">
                        <i class="bi bi-file-earmark-text"></i>
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div class="text-center mb-4">
                    <div class="display-4 fw-bold mb-2">@Model.TotalDowntimeCost.ToString("N2") ₽</div>
                    <div class="text-muted">Общая стоимость простоев за выбранный период</div>
                </div>

                <div class="mt-4">
                    <div class="d-flex justify-content-between mb-1">
                        <span>Доля в общих расходах</span>
                        <span>32%</span>
                    </div>
                    <div class="progress mb-3" style="height: 8px;">
                        <div class="progress-bar bg-success" role="progressbar" style="width: 32%"
                             aria-valuenow="32" aria-valuemin="0" aria-valuemax="100"></div>
                    </div>

                    <div class="d-flex justify-content-between align-items-center">
                        <button class="btn btn-sm btn-outline-success">
                            <i class="bi bi-graph-up me-1"></i> Анализ затрат
                        </button>
                        <span class="badge bg-success">
                            <i class="bi bi-arrow-down me-1"></i> -5.3% к прошлому периоду
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-6 mb-4">
        <div class="card shadow-sm border-0 rounded-3 h-100">
            <div class="card-header bg-info text-white d-flex justify-content-between align-items-center">
                <span><i class="bi bi-box-seam me-2"></i> ТОП-5 типов грузов по заявкам</span>
                <div class="btn-group">
                    <button class="btn btn-sm btn-light active">Количество</button>
                    <button class="btn btn-sm btn-outline-light">Вес</button>
                </div>
            </div>
            <div class="card-body">
                @foreach (var (cargo, index) in Model.Top5CargoTypesByRequests.Select((c, i) => (c, i)))
                {
                    <div class="d-flex align-items-center mb-4">
                        <div class="me-3">
                            @{
                                var iconClass = index switch
                                {
                                    0 => "bi-box",
                                    1 => "bi-fuel-pump",
                                    2 => "bi-minecart-loaded",
                                    3 => "bi-truck",
                                    _ => "bi-basket"
                                };
                                var bgClass = index switch
                                {
                                    0 => "bg-info",
                                    1 => "bg-primary",
                                    2 => "bg-warning",
                                    3 => "bg-success",
                                    _ => "bg-secondary"
                                };
                            }
                            <div class="d-flex align-items-center justify-content-center @bgClass bg-opacity-10 text-@bgClass.Replace("bg-", "") rounded-3"
                                 style="width: 2.5rem; height: 2.5rem;">
                                <i class="bi @iconClass"></i>
                            </div>
                        </div>
                        <div class="flex-grow-1">
                            <div class="d-flex justify-content-between align-items-center mb-1">
                                <span class="fw-medium">@cargo.CargoType</span>
                                <span class="fw-bold">@cargo.RequestCount заявок</span>
                            </div>
                            @{
                                // Вычисляем процент от общего количества заявок
                                var totalRequests = Model.Top5CargoTypesByRequests.Sum(c => c.RequestCount);
                                var percentage = (cargo.RequestCount * 100.0 / totalRequests);
                                var progressClass = index switch
                                {
                                    0 => "bg-info",
                                    1 => "bg-primary",
                                    2 => "bg-warning",
                                    3 => "bg-success",
                                    _ => "bg-secondary"
                                };
                            }
                            <div class="progress" style="height: 8px;">
                                <div class="progress-bar @progressClass" role="progressbar" style="width: @percentage%"
                                     aria-valuenow="@percentage" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                        </div>
                    </div>
                }

                <div class="d-flex justify-content-between align-items-center mt-3">
                    <button class="btn btn-sm btn-outline-info">
                        <i class="bi bi-list-ul me-1"></i> Все типы грузов
                    </button>
                    <button class="btn btn-sm btn-info">
                        <i class="bi bi-file-earmark-bar-graph me-1"></i> Подробный отчет
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Инициализация тултипов Bootstrap
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>
}